{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true,
    "ExecuteTime": {
     "end_time": "2023-07-03T02:19:49.427230300Z",
     "start_time": "2023-07-03T02:19:48.276324900Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "ERROR: Invalid requirement: '#'\n"
     ]
    }
   ],
   "source": [
    "# 판다스를 설치해줘\n",
    "%pip install pandas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "outputs": [],
   "source": [
    "# 판다스를 불러와줘\n",
    "import pandas as pd"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:03:40.432723300Z",
     "start_time": "2023-07-03T03:03:40.432723300Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "outputs": [],
   "source": [
    "# csv 파일을 열어줘\n",
    "df = pd.read_csv(\"./ta_20230703111041.csv\", encoding=\"cp949\")  # tsv"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:03:42.593970900Z",
     "start_time": "2023-07-03T03:03:42.549631900Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "outputs": [
    {
     "data": {
      "text/plain": "             날짜   지점  평균기온  최저기온  최고기온\n0  \\t1907-10-01  108  13.5   7.9  20.7\n1  \\t1907-10-02  108  16.2   7.9  22.0\n2  \\t1907-10-03  108  16.2  13.1  21.3\n3  \\t1907-10-04  108  16.5  11.2  22.0\n4  \\t1907-10-05  108  17.6  10.9  25.4",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>날짜</th>\n      <th>지점</th>\n      <th>평균기온</th>\n      <th>최저기온</th>\n      <th>최고기온</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>\\t1907-10-01</td>\n      <td>108</td>\n      <td>13.5</td>\n      <td>7.9</td>\n      <td>20.7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>\\t1907-10-02</td>\n      <td>108</td>\n      <td>16.2</td>\n      <td>7.9</td>\n      <td>22.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>\\t1907-10-03</td>\n      <td>108</td>\n      <td>16.2</td>\n      <td>13.1</td>\n      <td>21.3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>\\t1907-10-04</td>\n      <td>108</td>\n      <td>16.5</td>\n      <td>11.2</td>\n      <td>22.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>\\t1907-10-05</td>\n      <td>108</td>\n      <td>17.6</td>\n      <td>10.9</td>\n      <td>25.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:03:44.033534Z",
     "start_time": "2023-07-03T03:03:43.994867800Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 41848 entries, 0 to 41847\n",
      "Data columns (total 5 columns):\n",
      " #   Column  Non-Null Count  Dtype  \n",
      "---  ------  --------------  -----  \n",
      " 0   날짜      41848 non-null  object \n",
      " 1   지점      41848 non-null  int64  \n",
      " 2   평균기온    41092 non-null  float64\n",
      " 3   최저기온    41089 non-null  float64\n",
      " 4   최고기온    41089 non-null  float64\n",
      "dtypes: float64(3), int64(1), object(1)\n",
      "memory usage: 1.6+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:03:47.895694Z",
     "start_time": "2023-07-03T03:03:47.883025900Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "outputs": [],
   "source": [
    "# 지점 칼럼을 제거\n",
    "df.drop(\"지점\", axis=1, inplace=True)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:03:52.381015400Z",
     "start_time": "2023-07-03T03:03:52.372782400Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "outputs": [
    {
     "data": {
      "text/plain": "             날짜  평균기온  최저기온  최고기온\n0  \\t1907-10-01  13.5   7.9  20.7\n1  \\t1907-10-02  16.2   7.9  22.0\n2  \\t1907-10-03  16.2  13.1  21.3\n3  \\t1907-10-04  16.5  11.2  22.0\n4  \\t1907-10-05  17.6  10.9  25.4",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>날짜</th>\n      <th>평균기온</th>\n      <th>최저기온</th>\n      <th>최고기온</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>\\t1907-10-01</td>\n      <td>13.5</td>\n      <td>7.9</td>\n      <td>20.7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>\\t1907-10-02</td>\n      <td>16.2</td>\n      <td>7.9</td>\n      <td>22.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>\\t1907-10-03</td>\n      <td>16.2</td>\n      <td>13.1</td>\n      <td>21.3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>\\t1907-10-04</td>\n      <td>16.5</td>\n      <td>11.2</td>\n      <td>22.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>\\t1907-10-05</td>\n      <td>17.6</td>\n      <td>10.9</td>\n      <td>25.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:03:54.287720400Z",
     "start_time": "2023-07-03T03:03:54.266135200Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "outputs": [
    {
     "data": {
      "text/plain": "0    \\t1907-10-01\n1    \\t1907-10-02\n2    \\t1907-10-03\n3    \\t1907-10-04\n4    \\t1907-10-05\nName: 날짜, dtype: object"
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[\"날짜\"].head()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:04:01.498737Z",
     "start_time": "2023-07-03T03:04:01.492106800Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "outputs": [],
   "source": [
    "# df[\"날짜\"]의 모든 행에서 \"\\t\"를 지워줘.\n",
    "df[\"날짜\"] = df[\"날짜\"].str.replace(\"\\t\", \"\")"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:04:07.509225800Z",
     "start_time": "2023-07-03T03:04:07.482824Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "outputs": [
    {
     "data": {
      "text/plain": "           날짜  평균기온  최저기온  최고기온\n0  1907-10-01  13.5   7.9  20.7\n1  1907-10-02  16.2   7.9  22.0\n2  1907-10-03  16.2  13.1  21.3\n3  1907-10-04  16.5  11.2  22.0\n4  1907-10-05  17.6  10.9  25.4",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>날짜</th>\n      <th>평균기온</th>\n      <th>최저기온</th>\n      <th>최고기온</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1907-10-01</td>\n      <td>13.5</td>\n      <td>7.9</td>\n      <td>20.7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1907-10-02</td>\n      <td>16.2</td>\n      <td>7.9</td>\n      <td>22.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1907-10-03</td>\n      <td>16.2</td>\n      <td>13.1</td>\n      <td>21.3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1907-10-04</td>\n      <td>16.5</td>\n      <td>11.2</td>\n      <td>22.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1907-10-05</td>\n      <td>17.6</td>\n      <td>10.9</td>\n      <td>25.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:04:08.263720800Z",
     "start_time": "2023-07-03T03:04:08.244372600Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "outputs": [
    {
     "data": {
      "text/plain": "               날짜  평균기온  최저기온  최고기온\n41843  2023-06-28  26.5  24.2  30.1\n41844  2023-06-29  24.2  23.2  25.9\n41845  2023-06-30  25.3  23.2  29.1\n41846  2023-07-01  27.7  23.3  32.9\n41847  2023-07-02  26.7  23.5  30.6",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>날짜</th>\n      <th>평균기온</th>\n      <th>최저기온</th>\n      <th>최고기온</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>41843</th>\n      <td>2023-06-28</td>\n      <td>26.5</td>\n      <td>24.2</td>\n      <td>30.1</td>\n    </tr>\n    <tr>\n      <th>41844</th>\n      <td>2023-06-29</td>\n      <td>24.2</td>\n      <td>23.2</td>\n      <td>25.9</td>\n    </tr>\n    <tr>\n      <th>41845</th>\n      <td>2023-06-30</td>\n      <td>25.3</td>\n      <td>23.2</td>\n      <td>29.1</td>\n    </tr>\n    <tr>\n      <th>41846</th>\n      <td>2023-07-01</td>\n      <td>27.7</td>\n      <td>23.3</td>\n      <td>32.9</td>\n    </tr>\n    <tr>\n      <th>41847</th>\n      <td>2023-07-02</td>\n      <td>26.7</td>\n      <td>23.5</td>\n      <td>30.6</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:04:11.374164300Z",
     "start_time": "2023-07-03T03:04:11.361883600Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "outputs": [
    {
     "data": {
      "text/plain": "               평균기온          최저기온          최고기온\ncount  41092.000000  41089.000000  41089.000000\nmean      11.771603      7.479776     16.776303\nstd       10.654893     10.881388     10.971879\nmin      -19.200000    -23.100000    -16.300000\n25%        2.800000     -1.400000      7.300000\n50%       13.000000      8.000000     18.600000\n75%       21.200000     17.100000     26.300000\nmax       33.700000     30.300000     39.600000",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>평균기온</th>\n      <th>최저기온</th>\n      <th>최고기온</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>41092.000000</td>\n      <td>41089.000000</td>\n      <td>41089.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>11.771603</td>\n      <td>7.479776</td>\n      <td>16.776303</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>10.654893</td>\n      <td>10.881388</td>\n      <td>10.971879</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>-19.200000</td>\n      <td>-23.100000</td>\n      <td>-16.300000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2.800000</td>\n      <td>-1.400000</td>\n      <td>7.300000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>13.000000</td>\n      <td>8.000000</td>\n      <td>18.600000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>21.200000</td>\n      <td>17.100000</td>\n      <td>26.300000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>33.700000</td>\n      <td>30.300000</td>\n      <td>39.600000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:04:15.626932Z",
     "start_time": "2023-07-03T03:04:15.602385100Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "outputs": [
    {
     "data": {
      "text/plain": "               날짜  평균기온  최저기온  최고기온\n15676  1950-09-01   NaN   NaN   NaN\n15677  1950-09-02   NaN   NaN   NaN\n15678  1950-09-03   NaN   NaN   NaN\n15679  1950-09-04   NaN   NaN   NaN\n15680  1950-09-05   NaN   NaN   NaN\n...           ...   ...   ...   ...\n16430  1953-11-29   NaN   NaN   NaN\n16431  1953-11-30   NaN   NaN   NaN\n21260  1967-02-19  -1.7   NaN   NaN\n23691  1973-10-16  12.3   NaN   NaN\n41519  2022-08-08  26.8   NaN  28.4\n\n[759 rows x 4 columns]",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>날짜</th>\n      <th>평균기온</th>\n      <th>최저기온</th>\n      <th>최고기온</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>15676</th>\n      <td>1950-09-01</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>15677</th>\n      <td>1950-09-02</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>15678</th>\n      <td>1950-09-03</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>15679</th>\n      <td>1950-09-04</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>15680</th>\n      <td>1950-09-05</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>16430</th>\n      <td>1953-11-29</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>16431</th>\n      <td>1953-11-30</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>21260</th>\n      <td>1967-02-19</td>\n      <td>-1.7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>23691</th>\n      <td>1973-10-16</td>\n      <td>12.3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>41519</th>\n      <td>2022-08-08</td>\n      <td>26.8</td>\n      <td>NaN</td>\n      <td>28.4</td>\n    </tr>\n  </tbody>\n</table>\n<p>759 rows × 4 columns</p>\n</div>"
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[df[\"최저기온\"].isna() == True]"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:04:24.384385600Z",
     "start_time": "2023-07-03T03:04:24.363374600Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "outputs": [],
   "source": [
    "# 최저기온 최고기온 칼럼을 버리자. (drop, axis, [inplace or df=])\n",
    "df.drop([\"최저기온\", \"최고기온\"], axis=1, inplace=True)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:04:29.930794700Z",
     "start_time": "2023-07-03T03:04:29.927276200Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "outputs": [
    {
     "data": {
      "text/plain": "           날짜  평균기온\n0  1907-10-01  13.5\n1  1907-10-02  16.2\n2  1907-10-03  16.2\n3  1907-10-04  16.5\n4  1907-10-05  17.6",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>날짜</th>\n      <th>평균기온</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1907-10-01</td>\n      <td>13.5</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1907-10-02</td>\n      <td>16.2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1907-10-03</td>\n      <td>16.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1907-10-04</td>\n      <td>16.5</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1907-10-05</td>\n      <td>17.6</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:04:31.797504Z",
     "start_time": "2023-07-03T03:04:31.768332100Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "41848\n",
      "41092\n"
     ]
    }
   ],
   "source": [
    "print(len(df))\n",
    "df.dropna(inplace=True)\n",
    "print(len(df))"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:04:38.388508300Z",
     "start_time": "2023-07-03T03:04:38.378345Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "outputs": [],
   "source": [
    "# df의 특정 행 이전까지 삭제\n",
    "df = df[df[\"날짜\"] > \"1954\"]"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:05:27.251883500Z",
     "start_time": "2023-07-03T03:05:27.236322700Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "outputs": [
    {
     "data": {
      "text/plain": "               날짜  평균기온\n16463  1954-01-01  -2.4\n16464  1954-01-02  -1.5\n16465  1954-01-03   0.7\n16466  1954-01-04   1.0\n16467  1954-01-05   0.4",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>날짜</th>\n      <th>평균기온</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>16463</th>\n      <td>1954-01-01</td>\n      <td>-2.4</td>\n    </tr>\n    <tr>\n      <th>16464</th>\n      <td>1954-01-02</td>\n      <td>-1.5</td>\n    </tr>\n    <tr>\n      <th>16465</th>\n      <td>1954-01-03</td>\n      <td>0.7</td>\n    </tr>\n    <tr>\n      <th>16466</th>\n      <td>1954-01-04</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>16467</th>\n      <td>1954-01-05</td>\n      <td>0.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:05:28.013303700Z",
     "start_time": "2023-07-03T03:05:27.974872Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "outputs": [
    {
     "data": {
      "text/plain": "<Axes: >"
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 54217 (\\N{HANGUL SYLLABLE PYEONG}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 44512 (\\N{HANGUL SYLLABLE GYUN}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 50728 (\\N{HANGUL SYLLABLE ON}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 54217 (\\N{HANGUL SYLLABLE PYEONG}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 44512 (\\N{HANGUL SYLLABLE GYUN}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 50728 (\\N{HANGUL SYLLABLE ON}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 640x480 with 1 Axes>",
      "image/png": "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"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.plot()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:05:38.978640500Z",
     "start_time": "2023-07-03T03:05:38.744636500Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "outputs": [
    {
     "data": {
      "text/plain": "               날짜  평균기온\n16463  1954-01-01  -2.4\n16464  1954-01-02  -1.5\n16465  1954-01-03   0.7\n16466  1954-01-04   1.0\n16467  1954-01-05   0.4",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>날짜</th>\n      <th>평균기온</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>16463</th>\n      <td>1954-01-01</td>\n      <td>-2.4</td>\n    </tr>\n    <tr>\n      <th>16464</th>\n      <td>1954-01-02</td>\n      <td>-1.5</td>\n    </tr>\n    <tr>\n      <th>16465</th>\n      <td>1954-01-03</td>\n      <td>0.7</td>\n    </tr>\n    <tr>\n      <th>16466</th>\n      <td>1954-01-04</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>16467</th>\n      <td>1954-01-05</td>\n      <td>0.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:03:25.673958600Z",
     "start_time": "2023-07-03T03:03:25.673958600Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "outputs": [],
   "source": [
    "# 그룹화를 위한 연월칼럼 생성\n",
    "def func(date:str) -> str:\n",
    "    return date.rsplit(\"-\", maxsplit=1)[0]\n",
    "\n",
    "df[\"연월\"] = df[\"날짜\"].apply(func)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:17:56.634161500Z",
     "start_time": "2023-07-03T03:17:56.605710400Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "outputs": [
    {
     "data": {
      "text/plain": "               날짜  평균기온       연월\n16463  1954-01-01  -2.4  1954-01\n16464  1954-01-02  -1.5  1954-01\n16465  1954-01-03   0.7  1954-01\n16466  1954-01-04   1.0  1954-01\n16467  1954-01-05   0.4  1954-01",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>날짜</th>\n      <th>평균기온</th>\n      <th>연월</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>16463</th>\n      <td>1954-01-01</td>\n      <td>-2.4</td>\n      <td>1954-01</td>\n    </tr>\n    <tr>\n      <th>16464</th>\n      <td>1954-01-02</td>\n      <td>-1.5</td>\n      <td>1954-01</td>\n    </tr>\n    <tr>\n      <th>16465</th>\n      <td>1954-01-03</td>\n      <td>0.7</td>\n      <td>1954-01</td>\n    </tr>\n    <tr>\n      <th>16466</th>\n      <td>1954-01-04</td>\n      <td>1.0</td>\n      <td>1954-01</td>\n    </tr>\n    <tr>\n      <th>16467</th>\n      <td>1954-01-05</td>\n      <td>0.4</td>\n      <td>1954-01</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:18:03.584017600Z",
     "start_time": "2023-07-03T03:18:03.584017600Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "outputs": [],
   "source": [
    "# 연월 그룹으로 묶기\n",
    "df_ym = df.groupby(\"연월\").max()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:21:27.566091700Z",
     "start_time": "2023-07-03T03:21:27.498600400Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "outputs": [
    {
     "data": {
      "text/plain": "                 날짜  평균기온\n연월                       \n1954-01  1954-01-31   4.7\n1954-02  1954-02-28   8.8\n1954-03  1954-03-31  12.2\n1954-04  1954-04-30  18.6\n1954-05  1954-05-31  21.3\n...             ...   ...\n2023-03  2023-03-31  17.4\n2023-04  2023-04-30  19.1\n2023-05  2023-05-31  24.0\n2023-06  2023-06-30  28.5\n2023-07  2023-07-02  27.7\n\n[835 rows x 2 columns]",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>날짜</th>\n      <th>평균기온</th>\n    </tr>\n    <tr>\n      <th>연월</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1954-01</th>\n      <td>1954-01-31</td>\n      <td>4.7</td>\n    </tr>\n    <tr>\n      <th>1954-02</th>\n      <td>1954-02-28</td>\n      <td>8.8</td>\n    </tr>\n    <tr>\n      <th>1954-03</th>\n      <td>1954-03-31</td>\n      <td>12.2</td>\n    </tr>\n    <tr>\n      <th>1954-04</th>\n      <td>1954-04-30</td>\n      <td>18.6</td>\n    </tr>\n    <tr>\n      <th>1954-05</th>\n      <td>1954-05-31</td>\n      <td>21.3</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2023-03</th>\n      <td>2023-03-31</td>\n      <td>17.4</td>\n    </tr>\n    <tr>\n      <th>2023-04</th>\n      <td>2023-04-30</td>\n      <td>19.1</td>\n    </tr>\n    <tr>\n      <th>2023-05</th>\n      <td>2023-05-31</td>\n      <td>24.0</td>\n    </tr>\n    <tr>\n      <th>2023-06</th>\n      <td>2023-06-30</td>\n      <td>28.5</td>\n    </tr>\n    <tr>\n      <th>2023-07</th>\n      <td>2023-07-02</td>\n      <td>27.7</td>\n    </tr>\n  </tbody>\n</table>\n<p>835 rows × 2 columns</p>\n</div>"
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_ym"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:21:35.473316100Z",
     "start_time": "2023-07-03T03:21:35.473316100Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "outputs": [
    {
     "data": {
      "text/plain": "<Axes: xlabel='연월'>"
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 50672 (\\N{HANGUL SYLLABLE YEON}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 50900 (\\N{HANGUL SYLLABLE WEOL}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 54217 (\\N{HANGUL SYLLABLE PYEONG}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 44512 (\\N{HANGUL SYLLABLE GYUN}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 50728 (\\N{HANGUL SYLLABLE ON}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 50672 (\\N{HANGUL SYLLABLE YEON}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 50900 (\\N{HANGUL SYLLABLE WEOL}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 54217 (\\N{HANGUL SYLLABLE PYEONG}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 44512 (\\N{HANGUL SYLLABLE GYUN}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 50728 (\\N{HANGUL SYLLABLE ON}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 640x480 with 1 Axes>",
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_ym.plot()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:22:14.710673Z",
     "start_time": "2023-07-03T03:22:14.524201700Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "outputs": [
    {
     "data": {
      "text/plain": "                 날짜  평균기온\n연월                       \n1954-01  1954-01-31   4.7\n1954-02  1954-02-28   8.8\n1954-03  1954-03-31  12.2\n1954-04  1954-04-30  18.6\n1954-05  1954-05-31  21.3",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>날짜</th>\n      <th>평균기온</th>\n    </tr>\n    <tr>\n      <th>연월</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1954-01</th>\n      <td>1954-01-31</td>\n      <td>4.7</td>\n    </tr>\n    <tr>\n      <th>1954-02</th>\n      <td>1954-02-28</td>\n      <td>8.8</td>\n    </tr>\n    <tr>\n      <th>1954-03</th>\n      <td>1954-03-31</td>\n      <td>12.2</td>\n    </tr>\n    <tr>\n      <th>1954-04</th>\n      <td>1954-04-30</td>\n      <td>18.6</td>\n    </tr>\n    <tr>\n      <th>1954-05</th>\n      <td>1954-05-31</td>\n      <td>21.3</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 연도별로 최고기온만 추려서 다시 시각화해볼 것.\n",
    "df_ym.head()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:23:16.657754600Z",
     "start_time": "2023-07-03T03:23:16.657754600Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "outputs": [],
   "source": [
    "# df_ym 을 df_y로 재그룹화(reset_index 필요)\n",
    "df_ym = df_ym.reset_index()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:25:05.772935200Z",
     "start_time": "2023-07-03T03:25:05.772420500Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "outputs": [
    {
     "data": {
      "text/plain": "          연월          날짜  평균기온\n0    1954-01  1954-01-31   4.7\n1    1954-02  1954-02-28   8.8\n2    1954-03  1954-03-31  12.2\n3    1954-04  1954-04-30  18.6\n4    1954-05  1954-05-31  21.3\n..       ...         ...   ...\n830  2023-03  2023-03-31  17.4\n831  2023-04  2023-04-30  19.1\n832  2023-05  2023-05-31  24.0\n833  2023-06  2023-06-30  28.5\n834  2023-07  2023-07-02  27.7\n\n[835 rows x 3 columns]",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>연월</th>\n      <th>날짜</th>\n      <th>평균기온</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1954-01</td>\n      <td>1954-01-31</td>\n      <td>4.7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1954-02</td>\n      <td>1954-02-28</td>\n      <td>8.8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1954-03</td>\n      <td>1954-03-31</td>\n      <td>12.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1954-04</td>\n      <td>1954-04-30</td>\n      <td>18.6</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1954-05</td>\n      <td>1954-05-31</td>\n      <td>21.3</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>830</th>\n      <td>2023-03</td>\n      <td>2023-03-31</td>\n      <td>17.4</td>\n    </tr>\n    <tr>\n      <th>831</th>\n      <td>2023-04</td>\n      <td>2023-04-30</td>\n      <td>19.1</td>\n    </tr>\n    <tr>\n      <th>832</th>\n      <td>2023-05</td>\n      <td>2023-05-31</td>\n      <td>24.0</td>\n    </tr>\n    <tr>\n      <th>833</th>\n      <td>2023-06</td>\n      <td>2023-06-30</td>\n      <td>28.5</td>\n    </tr>\n    <tr>\n      <th>834</th>\n      <td>2023-07</td>\n      <td>2023-07-02</td>\n      <td>27.7</td>\n    </tr>\n  </tbody>\n</table>\n<p>835 rows × 3 columns</p>\n</div>"
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_ym"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:25:11.679233Z",
     "start_time": "2023-07-03T03:25:11.679233Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "outputs": [],
   "source": [
    "df_ym.drop(\"날짜\", axis=1, inplace=True)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:26:15.622604600Z",
     "start_time": "2023-07-03T03:26:15.606978800Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "outputs": [
    {
     "data": {
      "text/plain": "          연월  평균기온\n0    1954-01   4.7\n1    1954-02   8.8\n2    1954-03  12.2\n3    1954-04  18.6\n4    1954-05  21.3\n..       ...   ...\n830  2023-03  17.4\n831  2023-04  19.1\n832  2023-05  24.0\n833  2023-06  28.5\n834  2023-07  27.7\n\n[835 rows x 2 columns]",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>연월</th>\n      <th>평균기온</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1954-01</td>\n      <td>4.7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1954-02</td>\n      <td>8.8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1954-03</td>\n      <td>12.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1954-04</td>\n      <td>18.6</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1954-05</td>\n      <td>21.3</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>830</th>\n      <td>2023-03</td>\n      <td>17.4</td>\n    </tr>\n    <tr>\n      <th>831</th>\n      <td>2023-04</td>\n      <td>19.1</td>\n    </tr>\n    <tr>\n      <th>832</th>\n      <td>2023-05</td>\n      <td>24.0</td>\n    </tr>\n    <tr>\n      <th>833</th>\n      <td>2023-06</td>\n      <td>28.5</td>\n    </tr>\n    <tr>\n      <th>834</th>\n      <td>2023-07</td>\n      <td>27.7</td>\n    </tr>\n  </tbody>\n</table>\n<p>835 rows × 2 columns</p>\n</div>"
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_ym"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:26:20.665952800Z",
     "start_time": "2023-07-03T03:26:20.665952800Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "outputs": [],
   "source": [
    "# 연월 칼럼에서 월도 지워버리기!\n",
    "df_ym[\"연월\"] = df_ym[\"연월\"].apply(lambda x: x[:4])"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:30:12.038162Z",
     "start_time": "2023-07-03T03:30:12.014493400Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "outputs": [
    {
     "data": {
      "text/plain": "       연월  평균기온\n0    1954   4.7\n1    1954   8.8\n2    1954  12.2\n3    1954  18.6\n4    1954  21.3\n..    ...   ...\n830  2023  17.4\n831  2023  19.1\n832  2023  24.0\n833  2023  28.5\n834  2023  27.7\n\n[835 rows x 2 columns]",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>연월</th>\n      <th>평균기온</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1954</td>\n      <td>4.7</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1954</td>\n      <td>8.8</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1954</td>\n      <td>12.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1954</td>\n      <td>18.6</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>1954</td>\n      <td>21.3</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>830</th>\n      <td>2023</td>\n      <td>17.4</td>\n    </tr>\n    <tr>\n      <th>831</th>\n      <td>2023</td>\n      <td>19.1</td>\n    </tr>\n    <tr>\n      <th>832</th>\n      <td>2023</td>\n      <td>24.0</td>\n    </tr>\n    <tr>\n      <th>833</th>\n      <td>2023</td>\n      <td>28.5</td>\n    </tr>\n    <tr>\n      <th>834</th>\n      <td>2023</td>\n      <td>27.7</td>\n    </tr>\n  </tbody>\n</table>\n<p>835 rows × 2 columns</p>\n</div>"
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_ym"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:30:12.744077Z",
     "start_time": "2023-07-03T03:30:12.695977300Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "outputs": [],
   "source": [
    "# \"연월\" 칼럼으로 묶은 후, 집계함수로 평균 사용\n",
    "df_y = df_ym.groupby(\"연월\").mean()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:31:06.673494400Z",
     "start_time": "2023-07-03T03:31:06.657841600Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "outputs": [
    {
     "data": {
      "text/plain": "           평균기온\n연월             \n1954  17.375000\n1955  16.783333\n1956  16.591667\n1957  15.666667\n1958  17.283333",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>평균기온</th>\n    </tr>\n    <tr>\n      <th>연월</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1954</th>\n      <td>17.375000</td>\n    </tr>\n    <tr>\n      <th>1955</th>\n      <td>16.783333</td>\n    </tr>\n    <tr>\n      <th>1956</th>\n      <td>16.591667</td>\n    </tr>\n    <tr>\n      <th>1957</th>\n      <td>15.666667</td>\n    </tr>\n    <tr>\n      <th>1958</th>\n      <td>17.283333</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_y.head()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:31:12.415965600Z",
     "start_time": "2023-07-03T03:31:12.400312300Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: koreanize_matplotlib in c:\\users\\hkit\\appdata\\local\\programs\\python\\python311\\lib\\site-packages (0.1.1)\n",
      "Requirement already satisfied: matplotlib in c:\\users\\hkit\\appdata\\local\\programs\\python\\python311\\lib\\site-packages (from koreanize_matplotlib) (3.7.1)\n",
      "Requirement already satisfied: contourpy>=1.0.1 in c:\\users\\hkit\\appdata\\local\\programs\\python\\python311\\lib\\site-packages (from matplotlib->koreanize_matplotlib) (1.1.0)\n",
      "Requirement already satisfied: cycler>=0.10 in c:\\users\\hkit\\appdata\\local\\programs\\python\\python311\\lib\\site-packages (from matplotlib->koreanize_matplotlib) (0.11.0)\n",
      "Requirement already satisfied: fonttools>=4.22.0 in c:\\users\\hkit\\appdata\\local\\programs\\python\\python311\\lib\\site-packages (from matplotlib->koreanize_matplotlib) (4.40.0)\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in c:\\users\\hkit\\appdata\\local\\programs\\python\\python311\\lib\\site-packages (from matplotlib->koreanize_matplotlib) (1.4.4)\n",
      "Requirement already satisfied: numpy>=1.20 in c:\\users\\hkit\\appdata\\local\\programs\\python\\python311\\lib\\site-packages (from matplotlib->koreanize_matplotlib) (1.24.3)\n",
      "Requirement already satisfied: packaging>=20.0 in c:\\users\\hkit\\appdata\\local\\programs\\python\\python311\\lib\\site-packages (from matplotlib->koreanize_matplotlib) (23.1)\n",
      "Requirement already satisfied: pillow>=6.2.0 in c:\\users\\hkit\\appdata\\local\\programs\\python\\python311\\lib\\site-packages (from matplotlib->koreanize_matplotlib) (9.5.0)\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in c:\\users\\hkit\\appdata\\local\\programs\\python\\python311\\lib\\site-packages (from matplotlib->koreanize_matplotlib) (3.1.0)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in c:\\users\\hkit\\appdata\\local\\programs\\python\\python311\\lib\\site-packages (from matplotlib->koreanize_matplotlib) (2.8.2)\n",
      "Requirement already satisfied: six>=1.5 in c:\\users\\hkit\\appdata\\local\\programs\\python\\python311\\lib\\site-packages (from python-dateutil>=2.7->matplotlib->koreanize_matplotlib) (1.16.0)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Axes: xlabel='연월'>"
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 50672 (\\N{HANGUL SYLLABLE YEON}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 50900 (\\N{HANGUL SYLLABLE WEOL}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 54217 (\\N{HANGUL SYLLABLE PYEONG}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 44512 (\\N{HANGUL SYLLABLE GYUN}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\events.py:93: UserWarning: Glyph 50728 (\\N{HANGUL SYLLABLE ON}) missing from current font.\n",
      "  func(*args, **kwargs)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 50672 (\\N{HANGUL SYLLABLE YEON}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 50900 (\\N{HANGUL SYLLABLE WEOL}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 54217 (\\N{HANGUL SYLLABLE PYEONG}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 44512 (\\N{HANGUL SYLLABLE GYUN}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 44592 (\\N{HANGUL SYLLABLE GI}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n",
      "C:\\Users\\HKIT\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\IPython\\core\\pylabtools.py:152: UserWarning: Glyph 50728 (\\N{HANGUL SYLLABLE ON}) missing from current font.\n",
      "  fig.canvas.print_figure(bytes_io, **kw)\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 640x480 with 1 Axes>",
      "image/png": ""
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%pip install koreanize_matplotlib\n",
    "df_y.plot()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:32:45.199143700Z",
     "start_time": "2023-07-03T03:32:42.574806600Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "outputs": [],
   "source": [
    "df = df.drop(\"연월\", axis=1)"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:35:31.265260800Z",
     "start_time": "2023-07-03T03:35:31.249407800Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "outputs": [
    {
     "data": {
      "text/plain": "               날짜  평균기온\n16463  1954-01-01  -2.4\n16464  1954-01-02  -1.5\n16465  1954-01-03   0.7\n16466  1954-01-04   1.0\n16467  1954-01-05   0.4",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>날짜</th>\n      <th>평균기온</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>16463</th>\n      <td>1954-01-01</td>\n      <td>-2.4</td>\n    </tr>\n    <tr>\n      <th>16464</th>\n      <td>1954-01-02</td>\n      <td>-1.5</td>\n    </tr>\n    <tr>\n      <th>16465</th>\n      <td>1954-01-03</td>\n      <td>0.7</td>\n    </tr>\n    <tr>\n      <th>16466</th>\n      <td>1954-01-04</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>16467</th>\n      <td>1954-01-05</td>\n      <td>0.4</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 역대급으로 기온이 높았던 날 Top5\n",
    "df.head()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:36:26.283865Z",
     "start_time": "2023-07-03T03:36:26.268207700Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "outputs": [],
   "source": [
    "df[\"rank\"] = df[\"평균기온\"].rank(ascending=False, method=\"first\")"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:40:30.810789200Z",
     "start_time": "2023-07-03T03:40:30.790393800Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "outputs": [
    {
     "data": {
      "text/plain": "               날짜  평균기온     rank\n16463  1954-01-01  -2.4  22846.0\n16464  1954-01-02  -1.5  22345.0\n16465  1954-01-03   0.7  20943.0\n16466  1954-01-04   1.0  20757.0\n16467  1954-01-05   0.4  21139.0",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>날짜</th>\n      <th>평균기온</th>\n      <th>rank</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>16463</th>\n      <td>1954-01-01</td>\n      <td>-2.4</td>\n      <td>22846.0</td>\n    </tr>\n    <tr>\n      <th>16464</th>\n      <td>1954-01-02</td>\n      <td>-1.5</td>\n      <td>22345.0</td>\n    </tr>\n    <tr>\n      <th>16465</th>\n      <td>1954-01-03</td>\n      <td>0.7</td>\n      <td>20943.0</td>\n    </tr>\n    <tr>\n      <th>16466</th>\n      <td>1954-01-04</td>\n      <td>1.0</td>\n      <td>20757.0</td>\n    </tr>\n    <tr>\n      <th>16467</th>\n      <td>1954-01-05</td>\n      <td>0.4</td>\n      <td>21139.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:40:31.676290300Z",
     "start_time": "2023-07-03T03:40:31.658866400Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "outputs": [
    {
     "data": {
      "text/plain": "               날짜  평균기온  rank\n31276  1994-07-23  32.6   5.0\n31277  1994-07-24  33.1   3.0\n40051  2018-08-01  33.6   2.0\n40052  2018-08-02  33.7   1.0\n40053  2018-08-03  33.1   4.0",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>날짜</th>\n      <th>평균기온</th>\n      <th>rank</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>31276</th>\n      <td>1994-07-23</td>\n      <td>32.6</td>\n      <td>5.0</td>\n    </tr>\n    <tr>\n      <th>31277</th>\n      <td>1994-07-24</td>\n      <td>33.1</td>\n      <td>3.0</td>\n    </tr>\n    <tr>\n      <th>40051</th>\n      <td>2018-08-01</td>\n      <td>33.6</td>\n      <td>2.0</td>\n    </tr>\n    <tr>\n      <th>40052</th>\n      <td>2018-08-02</td>\n      <td>33.7</td>\n      <td>1.0</td>\n    </tr>\n    <tr>\n      <th>40053</th>\n      <td>2018-08-03</td>\n      <td>33.1</td>\n      <td>4.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# 인덱싱으로 더운날 Top5만 골라보기\n",
    "df[df[\"rank\"] <= 5]"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:41:32.302493900Z",
     "start_time": "2023-07-03T03:41:32.281874700Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "outputs": [],
   "source": [
    "import matplotlib as mpl"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:42:43.543011400Z",
     "start_time": "2023-07-03T03:42:43.496014Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "outputs": [],
   "source": [
    "# 판다스 데이터프레임.plot() 시 한글 나오게 하기\n",
    "mpl.rcParams[\"font.family\"] = \"Gulim\"\n",
    "mpl.rcParams[\"font.size\"] = 20"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:44:12.135966700Z",
     "start_time": "2023-07-03T03:44:12.120084800Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'DataFrame' object has no attribute 'mpl'",
     "output_type": "error",
     "traceback": [
      "\u001B[1;31m---------------------------------------------------------------------------\u001B[0m",
      "\u001B[1;31mAttributeError\u001B[0m                            Traceback (most recent call last)",
      "\u001B[1;32m~\\AppData\\Local\\Temp\\ipykernel_11276\\2422996658.py\u001B[0m in \u001B[0;36m?\u001B[1;34m()\u001B[0m\n\u001B[1;32m----> 1\u001B[1;33m \u001B[0mdf_y\u001B[0m\u001B[1;33m.\u001B[0m\u001B[0mmpl\u001B[0m\u001B[1;33m\u001B[0m\u001B[1;33m\u001B[0m\u001B[0m\n\u001B[0m",
      "\u001B[1;32m~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pandas\\core\\generic.py\u001B[0m in \u001B[0;36m?\u001B[1;34m(self, name)\u001B[0m\n\u001B[0;32m   5985\u001B[0m             \u001B[1;32mand\u001B[0m \u001B[0mname\u001B[0m \u001B[1;32mnot\u001B[0m \u001B[1;32min\u001B[0m \u001B[0mself\u001B[0m\u001B[1;33m.\u001B[0m\u001B[0m_accessors\u001B[0m\u001B[1;33m\u001B[0m\u001B[1;33m\u001B[0m\u001B[0m\n\u001B[0;32m   5986\u001B[0m             \u001B[1;32mand\u001B[0m \u001B[0mself\u001B[0m\u001B[1;33m.\u001B[0m\u001B[0m_info_axis\u001B[0m\u001B[1;33m.\u001B[0m\u001B[0m_can_hold_identifiers_and_holds_name\u001B[0m\u001B[1;33m(\u001B[0m\u001B[0mname\u001B[0m\u001B[1;33m)\u001B[0m\u001B[1;33m\u001B[0m\u001B[1;33m\u001B[0m\u001B[0m\n\u001B[0;32m   5987\u001B[0m         ):\n\u001B[0;32m   5988\u001B[0m             \u001B[1;32mreturn\u001B[0m \u001B[0mself\u001B[0m\u001B[1;33m[\u001B[0m\u001B[0mname\u001B[0m\u001B[1;33m]\u001B[0m\u001B[1;33m\u001B[0m\u001B[1;33m\u001B[0m\u001B[0m\n\u001B[1;32m-> 5989\u001B[1;33m         \u001B[1;32mreturn\u001B[0m \u001B[0mobject\u001B[0m\u001B[1;33m.\u001B[0m\u001B[0m__getattribute__\u001B[0m\u001B[1;33m(\u001B[0m\u001B[0mself\u001B[0m\u001B[1;33m,\u001B[0m \u001B[0mname\u001B[0m\u001B[1;33m)\u001B[0m\u001B[1;33m\u001B[0m\u001B[1;33m\u001B[0m\u001B[0m\n\u001B[0m",
      "\u001B[1;31mAttributeError\u001B[0m: 'DataFrame' object has no attribute 'mpl'"
     ]
    }
   ],
   "source": [
    "df_y.mpl()"
   ],
   "metadata": {
    "collapsed": false,
    "ExecuteTime": {
     "end_time": "2023-07-03T03:49:47.279557700Z",
     "start_time": "2023-07-03T03:49:47.256341600Z"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "outputs": [],
   "source": [],
   "metadata": {
    "collapsed": false
   }
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
